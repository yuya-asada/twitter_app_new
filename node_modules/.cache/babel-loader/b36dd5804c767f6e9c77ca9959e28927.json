{"ast":null,"code":"var _jsxFileName = \"/Users/asadayuya/Desktop/udemy/twitter_app_lesson/src/components/Post.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./Post.module.css\";\nimport { db } from \"../firebase\";\nimport firebase from \"firebase/app\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport { Avatar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Post = props => {\n  _s();\n\n  var _props$timestamp;\n\n  const classes = useStyles();\n  const user = useSelector(selectUser);\n  const [openComments, setOpenComments] = useState(false);\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState([{\n    id: \"\",\n    avatar: \"\",\n    text: \"\",\n    username: \"\",\n    timestamp: null\n  }]);\n  useEffect(() => {\n    const unSub = db.collection(\"posts\").doc(props.postId).collection(\"comments\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => {\n      setComments(snapshot.docs.map(doc => ({\n        id: doc.id,\n        avatar: doc.data().avatar,\n        text: doc.data().text,\n        username: doc.data().username,\n        timestamp: doc.data().timestamp\n      })));\n    });\n    return () => {\n      unSub();\n    };\n  }, [props.postId]);\n\n  const newComment = e => {\n    e.preventDefault();\n    db.collection(\"posts\").doc(props.postId).collection(\"comments\").add({\n      avatar: user.photoUrl,\n      text: comment,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      username: user.displayName\n    });\n    setComment(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.post,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.post_avatar,\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: props.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.post_body,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.post_header,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.post_headerUser,\n              children: [\"@\", props.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.post_headerTime,\n              children: new Date((_props$timestamp = props.timestamp) === null || _props$timestamp === void 0 ? void 0 : _props$timestamp.toDate()).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.post_tweet,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: props.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), props.image && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.post_tweetImage,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.image,\n          alt: \"tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MessageIcon, {\n        className: styles.post_commentIcon,\n        onClick: () => setOpenComments(!openComments)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), openComments && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [comments.map(com => {\n          var _com$timestamp;\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.post_comment,\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              src: com.avatar,\n              className: classes.small\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.post_commentUser,\n              children: [\"@\", com.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.post_commentText,\n              children: [com.text, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.post_headerTime,\n              children: new Date((_com$timestamp = com.timestamp) === null || _com$timestamp === void 0 ? void 0 : _com$timestamp.toDate()).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)]\n          }, com.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: newComment,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.post_form,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: styles.post_input,\n              type: \"text\",\n              placeholder: \"Type new comment...\",\n              value: comment,\n              onChange: e => setComment(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: !comment,\n              className: comment ? styles.post_button : styles.post_buttonDisable,\n              type: \"submit\",\n              children: /*#__PURE__*/_jsxDEV(SendIcon, {\n                className: styles.post_sendIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"FPqYG5v+ZXpYxJqwNzupS5MPMhY=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/asadayuya/Desktop/udemy/twitter_app_lesson/src/components/Post.tsx"],"names":["React","useState","useEffect","styles","db","firebase","useSelector","selectUser","Avatar","makeStyles","MessageIcon","SendIcon","useStyles","theme","small","width","spacing","height","marginRight","Post","props","classes","user","openComments","setOpenComments","comment","setComment","comments","setComments","id","avatar","text","username","timestamp","unSub","collection","doc","postId","orderBy","onSnapshot","snapshot","docs","map","data","newComment","e","preventDefault","add","photoUrl","firestore","FieldValue","serverTimestamp","displayName","post","post_avatar","post_body","post_header","post_headerUser","post_headerTime","Date","toDate","toLocaleString","post_tweet","image","post_tweetImage","post_commentIcon","com","post_comment","post_commentUser","post_commentText","post_form","post_input","target","value","post_button","post_buttonDisable","post_sendIcon"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./Post.module.css\";\nimport { db } from \"../firebase\";\nimport firebase from \"firebase/app\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport { Avatar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport SendIcon from \"@material-ui/icons/Send\";\n\ninterface PROPS {\n  postId: string;\n  avatar: string;\n  image: string;\n  text: string;\n  timestamp: any;\n  username: string;\n}\n\ninterface COMMENT {\n  id: string;\n  avatar: string;\n  text: string;\n  timestamp: any;\n  username: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst Post: React.FC<PROPS> = (props) => {\n  const classes = useStyles();\n  const user = useSelector(selectUser);\n  const [openComments, setOpenComments] = useState(false);\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState<COMMENT[]>([\n    {\n      id: \"\",\n      avatar: \"\",\n      text: \"\",\n      username: \"\",\n      timestamp: null,\n    },\n  ]);\n\n  useEffect(() => {\n    const unSub = db\n      .collection(\"posts\")\n      .doc(props.postId)\n      .collection(\"comments\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setComments(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            avatar: doc.data().avatar,\n            text: doc.data().text,\n            username: doc.data().username,\n            timestamp: doc.data().timestamp,\n          }))\n        );\n      });\n\n    return () => {\n      unSub();\n    };\n  }, [props.postId]);\n\n  const newComment = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    db.collection(\"posts\").doc(props.postId).collection(\"comments\").add({\n      avatar: user.photoUrl,\n      text: comment,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      username: user.displayName,\n    });\n    setComment(\"\");\n  };\n  return (\n    <div className={styles.post}>\n      <div className={styles.post_avatar}>\n        <Avatar src={props.avatar} />\n      </div>\n      <div className={styles.post_body}>\n        <div>\n          <div className={styles.post_header}>\n            <h3>\n              <span className={styles.post_headerUser}>@{props.username}</span>\n              <span className={styles.post_headerTime}>\n                {new Date(props.timestamp?.toDate()).toLocaleString()}\n              </span>\n            </h3>\n          </div>\n          <div className={styles.post_tweet}>\n            <p>{props.text}</p>\n          </div>\n        </div>\n        {props.image && (\n          <div className={styles.post_tweetImage}>\n            <img src={props.image} alt=\"tweet\" />\n          </div>\n        )}\n\n        <MessageIcon\n          className={styles.post_commentIcon}\n          onClick={() => setOpenComments(!openComments)}\n        />\n\n        {openComments && (\n          <>\n            {comments.map((com) => (\n              <div key={com.id} className={styles.post_comment}>\n                <Avatar src={com.avatar} className={classes.small} />\n\n                <span className={styles.post_commentUser}>@{com.username}</span>\n                <span className={styles.post_commentText}>{com.text} </span>\n                <span className={styles.post_headerTime}>\n                  {new Date(com.timestamp?.toDate()).toLocaleString()}\n                </span>\n              </div>\n            ))}\n\n            <form onSubmit={newComment}>\n              <div className={styles.post_form}>\n                <input\n                  className={styles.post_input}\n                  type=\"text\"\n                  placeholder=\"Type new comment...\"\n                  value={comment}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    setComment(e.target.value)\n                  }\n                />\n                <button\n                  disabled={!comment}\n                  className={\n                    comment ? styles.post_button : styles.post_buttonDisable\n                  }\n                  type=\"submit\"\n                >\n                  <SendIcon className={styles.post_sendIcon} />\n                </button>\n              </div>\n            </form>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}