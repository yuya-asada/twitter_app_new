{"ast":null,"code":"var _jsxFileName = \"/Users/asadayuya/Desktop/udemy/twitter_app_lesson/src/components/Auth.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { auth, provider, storage } from \"../firebase\";\nimport styles from \"./Auth.module.css\";\nimport { updateUserProfile } from \"../features/userSlice\";\nimport { Avatar, Button, CssBaseline, TextField, Paper, Grid, Typography, makeStyles } from \"@material-ui/core\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: \"100vh\"\n  },\n  image: {\n    backgroundImage: \"url(https://images.unsplash.com/photo-1614486109039-a8f3dc411201?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=668&q=80)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor: theme.palette.type === \"light\" ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\"\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst Auth = () => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [avatarImage, setAvatarImage] = useState(null);\n  const [isLogin, setIsLogin] = useState(true);\n\n  const onChangeImageHandler = e => {\n    if (e.target.files[0]) {\n      setAvatarImage(e.target.files[0]);\n      e.target.value = \"\";\n    }\n  };\n\n  const signInEmail = async () => {\n    await auth.signInWithEmailAndPassword(email, password);\n  };\n\n  const signUpEmail = async () => {\n    var _authUser$user;\n\n    const authUser = await auth.createUserWithEmailAndPassword(email, password);\n    let url = \"\";\n\n    if (avatarImage) {\n      const S = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n      const N = 16;\n      const randomChar = Array.from(crypto.getRandomValues(new Uint32Array(N))).map(n => S[n % S.length]).join(\"\");\n      const fileName = randomChar + \"_\" + avatarImage.name;\n      await storage.ref(\"avatars/${fileName}\").put(avatarImage); //firestorageに画像ファイルをアップロード\n\n      url = await storage.ref(\"avatars\").child(fileName).getDownloadURL();\n    }\n\n    await ((_authUser$user = authUser.user) === null || _authUser$user === void 0 ? void 0 : _authUser$user.updateProfile({\n      displayName: username,\n      photoURL: url\n    })); //firebaseに渡す\n\n    dispatch(updateUserProfile({\n      displayName: username,\n      photoUrl: url\n    })); //reduxに渡す\n  };\n\n  const signInGoogle = async () => {\n    await auth.signInWithPopup(provider).catch(err => alert(err.message));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    component: \"main\",\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: false,\n      sm: 4,\n      md: 7,\n      className: classes.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      md: 5,\n      component: Paper,\n      elevation: 6,\n      square: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.avatar,\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: isLogin ? \"Login\" : \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          noValidate: true,\n          children: [!isLogin && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              name: \"username\",\n              label: \"username\",\n              id: \"username\",\n              autoComplete: \"username\",\n              autoFocus: true,\n              value: username,\n              onChange: e => {\n                setUsername(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)\n          }, void 0, false), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"email\",\n            label: \"Email Address\",\n            name: \"email\",\n            autoComplete: \"email\",\n            autoFocus: true,\n            value: email,\n            onChange: e => {\n              setEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            id: \"password\",\n            autoComplete: \"current-password\",\n            value: password,\n            onChange: e => {\n              setPassword(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.submit,\n            startIcon: /*#__PURE__*/_jsxDEV(EmailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 26\n            }, this),\n            onClick: isLogin ? async () => {\n              try {\n                await signInEmail();\n              } catch (err) {\n                alert(err.message);\n              }\n            } : async () => {\n              try {\n                await signUpEmail();\n              } catch (err) {\n                alert(err.message);\n              }\n            },\n            children: isLogin ? \"Login\" : \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.login_reset,\n              children: \"Forgot password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.login_toggleMode,\n              onClick: () => setIsLogin(!isLogin),\n              children: isLogin ? \"Create new account ?\" : \"Back to login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.submit,\n            onClick: signInGoogle,\n            children: \"Sign In with Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"hd9FcQ2L+Ocq1lHWRurbivjoBqs=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/asadayuya/Desktop/udemy/twitter_app_lesson/src/components/Auth.tsx"],"names":["React","useState","useDispatch","auth","provider","storage","styles","updateUserProfile","Avatar","Button","CssBaseline","TextField","Paper","Grid","Typography","makeStyles","EmailIcon","LockOutlinedIcon","useStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","Auth","classes","dispatch","email","setEmail","password","setPassword","username","setUsername","avatarImage","setAvatarImage","isLogin","setIsLogin","onChangeImageHandler","e","target","files","value","signInEmail","signInWithEmailAndPassword","signUpEmail","authUser","createUserWithEmailAndPassword","url","S","N","randomChar","Array","from","crypto","getRandomValues","Uint32Array","map","n","length","join","fileName","name","ref","put","child","getDownloadURL","user","updateProfile","displayName","photoURL","photoUrl","signInGoogle","signInWithPopup","catch","err","alert","message","login_reset","login_toggleMode"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { auth, provider, storage } from \"../firebase\";\nimport styles from \"./Auth.module.css\";\nimport { updateUserProfile } from \"../features/userSlice\";\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Paper,\n  Grid,\n  Typography,\n  makeStyles,\n  Modal,\n  IconButton,\n  Box,\n} from \"@material-ui/core\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\nimport CameraIcon from \"@material-ui/icons/Camera\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage:\n      \"url(https://images.unsplash.com/photo-1614486109039-a8f3dc411201?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=668&q=80)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Auth: React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [avatarImage, setAvatarImage] = useState<File | null>(null);\n  const [isLogin, setIsLogin] = useState(true);\n\n  const onChangeImageHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files![0]) {\n      setAvatarImage(e.target.files![0]);\n      e.target.value = \"\";\n    }\n  };\n  const signInEmail = async () => {\n    await auth.signInWithEmailAndPassword(email, password);\n  };\n  const signUpEmail = async () => {\n    const authUser = await auth.createUserWithEmailAndPassword(email, password);\n    let url = \"\";\n    if (avatarImage) {\n      const S =\n        \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n      const N = 16;\n      const randomChar = Array.from(crypto.getRandomValues(new Uint32Array(N)))\n        .map((n) => S[n % S.length])\n        .join(\"\");\n      const fileName = randomChar + \"_\" + avatarImage.name;\n\n      await storage.ref(\"avatars/${fileName}\").put(avatarImage);\n      //firestorageに画像ファイルをアップロード\n      url = await storage.ref(\"avatars\").child(fileName).getDownloadURL();\n    }\n    await authUser.user?.updateProfile({\n      displayName: username,\n      photoURL: url,\n    });\n    //firebaseに渡す\n    dispatch(\n      updateUserProfile({\n        displayName: username,\n        photoUrl: url,\n      })\n    );\n    //reduxに渡す\n  };\n  const signInGoogle = async () => {\n    await auth.signInWithPopup(provider).catch((err) => alert(err.message));\n  };\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            {isLogin ? \"Login\" : \"Register\"}\n          </Typography>\n          <form className={classes.form} noValidate>\n            {!isLogin && (\n              <>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"username\"\n                  label=\"username\"\n                  id=\"username\"\n                  autoComplete=\"username\"\n                  autoFocus\n                  value={username}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setUsername(e.target.value);\n                  }}\n                />\n              </>\n            )}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              value={email}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setEmail(e.target.value);\n              }}\n            />\n\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setPassword(e.target.value);\n              }}\n            />\n\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              startIcon={<EmailIcon />}\n              onClick={\n                isLogin\n                  ? async () => {\n                      try {\n                        await signInEmail();\n                      } catch (err) {\n                        alert(err.message);\n                      }\n                    }\n                  : async () => {\n                      try {\n                        await signUpEmail();\n                      } catch (err) {\n                        alert(err.message);\n                      }\n                    }\n              }\n            >\n              {isLogin ? \"Login\" : \"Register\"}\n            </Button>\n            <Grid container>\n              <Grid item xs></Grid>\n              <span className={styles.login_reset}>Forgot password</span>\n              <Grid item></Grid>\n              <span\n                className={styles.login_toggleMode}\n                onClick={() => setIsLogin(!isLogin)}\n              >\n                {isLogin ? \"Create new account ?\" : \"Back to login\"}\n              </span>\n            </Grid>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={signInGoogle}\n            >\n              Sign In with Google\n            </Button>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}