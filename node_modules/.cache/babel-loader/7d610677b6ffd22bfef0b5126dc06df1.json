{"ast":null,"code":"var _jsxFileName = \"/Users/asadayuya/Desktop/udemy/twitter_app_lesson/src/components/Feed.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./Feed.module.css\";\nimport { db } from \"../firebase\";\nimport TweetInput from \"./TweetInput\";\nimport Post from \"./Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Feed = () => {\n  _s();\n\n  var _posts$;\n\n  const [posts, setPosts] = useState([{\n    id: \"\",\n    avatar: \"\",\n    image: \"\",\n    text: \"\",\n    timestamp: null,\n    username: \"\"\n  }]);\n  useEffect(() => {\n    const unSub = db.collection(\"posts\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => setPosts(snapshot.docs.map(doc => ({\n      id: doc.id,\n      avatar: doc.data().avatar,\n      image: doc.data().image,\n      text: doc.data().text,\n      timestamp: doc.data().timestamp,\n      username: doc.data().username\n    }))));\n    return () => {\n      unSub();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.feed,\n    children: [/*#__PURE__*/_jsxDEV(TweetInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), ((_posts$ = posts[0]) === null || _posts$ === void 0 ? void 0 : _posts$.id) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        postId: post.id,\n        avatar: post.avatar,\n        image: post.image,\n        text: post.text,\n        timestamp: post.timestamp,\n        username: post.username\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Feed, \"zBwJKpkEkN+9fPqm95dIZRUaGNo=\");\n\n_c = Feed;\nexport default Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/Users/asadayuya/Desktop/udemy/twitter_app_lesson/src/components/Feed.tsx"],"names":["React","useState","useEffect","styles","db","TweetInput","Post","Feed","posts","setPosts","id","avatar","image","text","timestamp","username","unSub","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","feed","post"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,EAAT,QAAmB,aAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAEA,MAAMC,IAAc,GAAG,MAAM;AAAA;;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CACjC;AACES,IAAAA,EAAE,EAAE,EADN;AAEEC,IAAAA,MAAM,EAAE,EAFV;AAGEC,IAAAA,KAAK,EAAE,EAHT;AAIEC,IAAAA,IAAI,EAAE,EAJR;AAKEC,IAAAA,SAAS,EAAE,IALb;AAMEC,IAAAA,QAAQ,EAAE;AANZ,GADiC,CAAD,CAAlC;AAWAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,KAAK,GAAGZ,EAAE,CACba,UADW,CACA,OADA,EAEXC,OAFW,CAEH,WAFG,EAEU,MAFV,EAGXC,UAHW,CAGCC,QAAD,IACVX,QAAQ,CACNW,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,GAAD,KAAU;AAC1Bb,MAAAA,EAAE,EAAEa,GAAG,CAACb,EADkB;AAE1BC,MAAAA,MAAM,EAAEY,GAAG,CAACC,IAAJ,GAAWb,MAFO;AAG1BC,MAAAA,KAAK,EAAEW,GAAG,CAACC,IAAJ,GAAWZ,KAHQ;AAI1BC,MAAAA,IAAI,EAAEU,GAAG,CAACC,IAAJ,GAAWX,IAJS;AAK1BC,MAAAA,SAAS,EAAES,GAAG,CAACC,IAAJ,GAAWV,SALI;AAM1BC,MAAAA,QAAQ,EAAEQ,GAAG,CAACC,IAAJ,GAAWT;AANK,KAAV,CAAlB,CADM,CAJE,CAAd;AAeA,WAAO,MAAM;AACXC,MAAAA,KAAK;AACN,KAFD;AAGD,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,sBACE;AAAK,IAAA,SAAS,EAAEb,MAAM,CAACsB,IAAvB;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAGG,YAAAjB,KAAK,CAAC,CAAD,CAAL,oDAAUE,EAAV,kBACC;AAAA,gBACGF,KAAK,CAACc,GAAN,CAAWI,IAAD,iBACT,QAAC,IAAD;AAEE,QAAA,MAAM,EAAEA,IAAI,CAAChB,EAFf;AAGE,QAAA,MAAM,EAAEgB,IAAI,CAACf,MAHf;AAIE,QAAA,KAAK,EAAEe,IAAI,CAACd,KAJd;AAKE,QAAA,IAAI,EAAEc,IAAI,CAACb,IALb;AAME,QAAA,SAAS,EAAEa,IAAI,CAACZ,SANlB;AAOE,QAAA,QAAQ,EAAEY,IAAI,CAACX;AAPjB,SACOW,IAAI,CAAChB,EADZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH,qBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAtDD;;GAAMH,I;;KAAAA,I;AAwDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./Feed.module.css\";\nimport { db } from \"../firebase\";\nimport TweetInput from \"./TweetInput\";\nimport Post from \"./Post\";\n\nconst Feed: React.FC = () => {\n  const [posts, setPosts] = useState([\n    {\n      id: \"\",\n      avatar: \"\",\n      image: \"\",\n      text: \"\",\n      timestamp: null,\n      username: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    const unSub = db\n      .collection(\"posts\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) =>\n        setPosts(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            avatar: doc.data().avatar,\n            image: doc.data().image,\n            text: doc.data().text,\n            timestamp: doc.data().timestamp,\n            username: doc.data().username,\n          }))\n        )\n      );\n    return () => {\n      unSub();\n    };\n  }, []);\n  \n  return (\n    <div className={styles.feed}>\n      <TweetInput />\n      \n      {posts[0]?.id && (\n        <>\n          {posts.map((post) => (\n            <Post\n              key={post.id}\n              postId={post.id}\n              avatar={post.avatar}\n              image={post.image}\n              text={post.text}\n              timestamp={post.timestamp}\n              username={post.username}\n            />\n          ))}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Feed;\n"]},"metadata":{},"sourceType":"module"}